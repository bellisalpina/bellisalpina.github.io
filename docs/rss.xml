<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Bellisalpina</title><link>https://bellisalpina.github.io</link><description>Meet me in the afterglow</description><copyright>Bellisalpina</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://s2.loli.net/2024/10/09/nZ3z81Mu4OIFshE.jpg</url><title>avatar</title><link>https://bellisalpina.github.io</link></image><lastBuildDate>Wed, 09 Oct 2024 02:45:48 +0000</lastBuildDate><managingEditor>Bellisalpina</managingEditor><ttl>60</ttl><webMaster>Bellisalpina</webMaster><item><title>WireGuard搭建虚拟个人网络</title><link>https://bellisalpina.github.io/post/WireGuard-da-jian-xu-ni-ge-ren-wang-luo.html</link><description># WireGuard搭建虚拟个人网络&#13;
&#13;
### 安装WireGuard&#13;
```&#13;
# 安装wireguard&#13;
apt install wireguard-tools -y&#13;
&#13;
# 开启流量转发&#13;
echo 'net.ipv4.ip_forward = 1' | tee -a /etc/sysctl.conf&#13;
echo 'net.ipv6.conf.all.forwarding = 1' | tee -a /etc/sysctl.conf&#13;
sysctl -p /etc/sysctl.conf&#13;
```&#13;
&#13;
### 进入配置存储路径，调整目录权限&#13;
```&#13;
chmod 0777 /etc/wireguard&#13;
cd /etc/wireguard&#13;
```&#13;
&#13;
### 生成公钥私钥&#13;
```&#13;
wg genkey | tee server.key | wg pubkey &gt; server.key.pub&#13;
```&#13;
&#13;
### 生成client1公钥私钥&#13;
```&#13;
wg genkey | tee client1.key | wg pubkey &gt; client1.key.pub&#13;
```&#13;
&#13;
### 创建服务器配置文件&#13;
```&#13;
echo '&#13;
[Interface]&#13;
PrivateKey = $(cat server.key)&#13;
Address = 10.0.0.1/24&#13;
ListenPort = 50820&#13;
DNS = 119.29.29.29&#13;
&#13;
PostUp = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE&#13;
PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE&#13;
#注意eth0需要为本机网卡名称&#13;
&#13;
[Peer]&#13;
PublicKey = $(cat client1.key.pub)&#13;
AllowedIPs = 10.0.0.2/32' &gt; wg0.conf&#13;
```&#13;
&#13;
### 增加client2&#13;
```&#13;
# 生成公钥私钥&#13;
wg genkey | tee client2.key | wg pubkey &gt; client2.key.pub&#13;
&#13;
# 追加到wg0.conf配置&#13;
echo '&#13;
[Peer]&#13;
PublicKey =  $(cat client2.key.pub)&#13;
AllowedIPs = 10.0.0.3/32' &gt;&gt; wg0.conf&#13;
```&#13;
&#13;
### 设置WireGuard服务自启&#13;
```&#13;
systemctl enable wg-quick@wg0&#13;
```&#13;
&#13;
### 启动WireGuard&#13;
```&#13;
# 启动wg0&#13;
wg-quick up wg0&#13;
# 关闭wg0&#13;
wg-quick down wg0&#13;
```&#13;
&#13;
### 创建client1配置&#13;
```&#13;
echo '&#13;
[Interface]&#13;
PrivateKey = $(cat client1.key)&#13;
Address = 10.0.0.2/24&#13;
DNS = 119.29.29.29&#13;
&#13;
[Peer]&#13;
PublicKey = $(cat server.key.pub)&#13;
AllowedIPs = 10.0.0.0/24&#13;
Endpoint = 公网IP:50820&#13;
PersistentKeepalive = 30' &gt; client1.conf&#13;
```。</description><guid isPermaLink="true">https://bellisalpina.github.io/post/WireGuard-da-jian-xu-ni-ge-ren-wang-luo.html</guid><pubDate>Wed, 09 Oct 2024 02:38:46 +0000</pubDate></item><item><title>如何在GitHub正确地使用curl下载文件？</title><link>https://bellisalpina.github.io/post/ru-he-zai-GitHub-zheng-que-di-shi-yong-curl-xia-zai-wen-jian-%EF%BC%9F.html</link><description># 如何在GitHub正确地使用curl下载文件？  &#13;
&#13;
下载与原始文件同名的文件的常用语法非常简单：&#13;
&#13;
```&#13;
curl -O URL&#13;
```&#13;
&#13;
这在大多数情况下都有效，但是，有时从 GitHub 或 SourceForge 下载文件时，它不会获取正确的文件  &#13;
&#13;
## **使用 curl 正确下载存档文件**  &#13;
&#13;
这里的问题是 URL 重定向到实际的存档文件，为此，需要使用其他选项  &#13;
&#13;
```&#13;
curl -JLO URL&#13;
```&#13;
&#13;
选项可以按任何顺序排列  &#13;
&#13;
这是基于 curl 命令手册页的选项的快速说明：  &#13;
&#13;
- J：此选项告诉 -O, --remote-name 选项使用服务器指定的 Content-Disposition 文件名，而不是从 URL 中提取文件名  &#13;
- L：如果服务器报告请求的页面已移动到不同的位置（用 Location: 标头和 3XX 响应代码指示），此选项将使 curl 在新位置重做请求  &#13;
- O：使用此选项，无需指定下载的输出文件名  。</description><guid isPermaLink="true">https://bellisalpina.github.io/post/ru-he-zai-GitHub-zheng-que-di-shi-yong-curl-xia-zai-wen-jian-%EF%BC%9F.html</guid><pubDate>Wed, 09 Oct 2024 00:53:53 +0000</pubDate></item></channel></rss>